import Colors from "./constants/colors";
import "./assets/App.css";
import { useEffect, useState } from "react";
import { MessageType, type Message } from "./interfaces/figma";
import { postMessage } from "./messaging";
import CommonPageElement from "../backend/interfaces/pageElements/CommonPageElement";
import { createGradientImage, parseLinearGradient } from "./utils/gradient";
import FullScreenLoading from "./components/FullScreenLoading";

enum Tabs {
	initial = "initial",
	download = "download",
}

function App() {
	const [isFrameSelected, setIsFrameSelected] = useState(false);
	const [warningMessage, setWarningMessage] = useState("");
	const [currentSelection, setCurrentSelection] = useState<null | any>(null);
	const [isLoading, setIsLoading] = useState(false);
	const [tab, setTab] = useState<Tabs>(Tabs.download);
	const [downloadContent, setDownloadContent] = useState();

	useEffect(() => {
		setTab(Tabs.initial);

		window.onmessage = (event: MessageEvent) => {
			const message = event.data.pluginMessage as Message;
			// console.log("[ui] message received:", message, message.type);

			switch (message.type) {
				case MessageType.SelectionChange: {
					if (message.data.selection.length > 1) {
						setWarningMessage("Selecione apenas um frame");
						setIsFrameSelected(false);
						setCurrentSelection(null);
						break;
					}

					setWarningMessage("");
					setCurrentSelection(message.data.selection[0]);
					break;
				}

				case MessageType.IsSelected: {
					setIsFrameSelected(message.data.isSelected);
					break;
				}

				case MessageType.ConversionComplete: {
					setIsFrameSelected(false);
					setIsLoading(false);
					setDownloadContent(message.data);
					setTab(Tabs.download);
					break;
				}

				case MessageType.ProcessGradient: {
					convertGradient(message.data);
					break;
				}

				default:
					break;
			}
		};

		return () => {
			window.onmessage = null;
		};
	}, []);

	const convertGradient = (data: CommonPageElement) => {
		console.log("[ui] convertGradient", data);

		const result = parseLinearGradient(data.content.desktop);

		if (!result) {
			console.log("[ui] No gradient found");

			postMessage({
				type: MessageType.GradientProcessed,
				data: {
					gradient: data,
					image: null,
				},
			});
			return;
		}

		const image = createGradientImage(
			result,
			data.boundingClientRect.desktop.width,
			data.boundingClientRect.desktop.height,
		);

		postMessage({
			type: MessageType.GradientProcessed,
			data: {
				gradient: data,
				image: image,
			},
		});
	};

	const downloadJson = () => {
		const data = downloadContent;

		const blob = new Blob([JSON.stringify(data)], { type: "application/json" });
		const url = URL.createObjectURL(blob);

		const a = document.createElement("a");
		a.href = url;
		a.download = "converted_frame.json";
		a.click();

		// Opcional: revoga o objeto apÃ³s uso
		setTimeout(() => URL.revokeObjectURL(url), 1000);
	};

	const initCloning = () => {
		setIsLoading(true);
		console.log("[ui] initCloning", currentSelection);

		postMessage({
			type: MessageType.SelectionInit,
			data: { node: currentSelection! },
		});
	};

	return (
		<div
			style={{
				background: `white`,
				width: "100%",
				height: "100%",
				padding: "2rem",
				display: "flex",
				justifyContent: isLoading ? "flex-start" : "space-between",
				alignItems: "center",
				flexDirection: "column",
				gap: isLoading ? "3rem" : "1rem",
			}}
		>
			<div style={{ width: "50%" }}>
				<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="auto" viewBox="0 0 354 120" fill="none">
					<path
						d="M59.6951 53.4769L23.2147 37.724L59.6951 22.8002L96.1754 37.724L59.6951 53.4769Z"
						fill="#268DF3"
						stroke="#268DF3"
						stroke-width="12.4365"
						stroke-linecap="round"
						stroke-linejoin="round"
					/>
					<path
						d="M23.2147 59.2806L59.6951 75.0335L96.1754 59.2806"
						stroke="#9ECCFA"
						stroke-width="12.4365"
						stroke-linecap="round"
						stroke-linejoin="round"
					/>
					<path
						d="M23.2147 80.8372L59.6951 96.59L96.1754 80.8372"
						stroke="#258DF4"
						stroke-width="12.4365"
						stroke-linecap="round"
						stroke-linejoin="round"
					/>
					<path
						d="M141.443 78.5518C139.825 78.5518 138.326 78.2865 136.946 77.7558C135.567 77.2252 134.373 76.4823 133.365 75.5272C132.383 74.5986 131.667 73.4976 131.216 72.2241L136.071 70.3934C136.389 71.4016 137.013 72.2108 137.941 72.821C138.896 73.4578 140.064 73.7762 141.443 73.7762C142.505 73.7762 143.433 73.5772 144.229 73.1792C145.052 72.7812 145.688 72.1975 146.139 71.4281C146.591 70.6853 146.816 69.7832 146.816 68.722V63.7872L147.811 64.9811C147.068 66.2811 146.073 67.2628 144.826 67.926C143.579 68.5893 142.16 68.9209 140.568 68.9209C138.552 68.9209 136.747 68.4567 135.156 67.5281C133.564 66.5995 132.317 65.326 131.415 63.7076C130.513 62.0892 130.062 60.2718 130.062 58.2554C130.062 56.2125 130.513 54.3951 131.415 52.8033C132.317 51.2114 133.55 49.9644 135.116 49.0624C136.681 48.1338 138.459 47.6695 140.449 47.6695C142.067 47.6695 143.486 48.0144 144.707 48.7042C145.954 49.3675 146.988 50.3359 147.811 51.6094L147.095 52.9227V48.147H152.029V68.722C152.029 70.6057 151.565 72.2904 150.637 73.7762C149.734 75.2619 148.487 76.4293 146.896 77.2783C145.33 78.1273 143.513 78.5518 141.443 78.5518ZM141.205 64.1055C142.319 64.1055 143.287 63.8668 144.11 63.3892C144.959 62.8851 145.622 62.1953 146.1 61.3198C146.577 60.4442 146.816 59.4361 146.816 58.2952C146.816 57.1809 146.564 56.186 146.06 55.3105C145.582 54.4084 144.919 53.7053 144.07 53.2012C143.248 52.6971 142.292 52.4451 141.205 52.4451C140.117 52.4451 139.135 52.6971 138.26 53.2012C137.384 53.7053 136.694 54.4084 136.19 55.3105C135.713 56.186 135.474 57.1809 135.474 58.2952C135.474 59.4095 135.713 60.4044 136.19 61.28C136.694 62.1555 137.371 62.8453 138.22 63.3494C139.095 63.8535 140.09 64.1055 141.205 64.1055ZM156.898 69.7965V48.147H161.793V52.9625L161.395 52.2461C161.899 50.6277 162.682 49.5001 163.743 48.8634C164.831 48.2266 166.131 47.9083 167.643 47.9083H168.917V52.5247H167.046C165.561 52.5247 164.367 52.989 163.465 53.9176C162.563 54.8196 162.112 56.0931 162.112 57.7381V69.7965H156.898ZM182.051 70.274C179.822 70.274 177.872 69.7699 176.201 68.7618C174.529 67.7536 173.229 66.3872 172.301 64.6627C171.372 62.9382 170.908 61.0279 170.908 58.932C170.908 56.7564 171.372 54.8329 172.301 53.1614C173.256 51.4634 174.542 50.1236 176.161 49.142C177.806 48.1603 179.636 47.6695 181.653 47.6695C183.351 47.6695 184.837 47.9481 186.11 48.5052C187.41 49.0624 188.511 49.8318 189.413 50.8134C190.315 51.7951 191.005 52.9227 191.483 54.1962C191.96 55.4431 192.199 56.7962 192.199 58.2554C192.199 58.6269 192.172 59.0116 192.119 59.4095C192.093 59.8075 192.026 60.1524 191.92 60.4442H175.206V56.4646H188.975L186.508 58.335C186.747 57.1146 186.68 56.0268 186.309 55.0717C185.964 54.1166 185.38 53.3604 184.558 52.8033C183.762 52.2461 182.794 51.9675 181.653 51.9675C180.565 51.9675 179.597 52.2461 178.748 52.8033C177.899 53.3339 177.249 54.1298 176.798 55.1911C176.373 56.2258 176.214 57.486 176.32 58.9718C176.214 60.2983 176.386 61.479 176.837 62.5137C177.315 63.5219 178.005 64.3045 178.907 64.8617C179.835 65.4188 180.897 65.6974 182.091 65.6974C183.284 65.6974 184.293 65.4454 185.115 64.9413C185.964 64.4372 186.627 63.7606 187.105 62.9116L191.323 64.9811C190.899 66.0158 190.236 66.9311 189.334 67.727C188.432 68.523 187.357 69.1465 186.11 69.5975C184.89 70.0485 183.537 70.274 182.051 70.274ZM202.64 70.274C201.127 70.274 199.814 70.022 198.7 69.5179C197.585 69.0138 196.723 68.2975 196.113 67.3689C195.503 66.4138 195.198 65.3127 195.198 64.0657C195.198 62.8718 195.463 61.8106 195.994 60.882C196.524 59.9269 197.347 59.1309 198.461 58.4942C199.575 57.8575 200.981 57.4064 202.679 57.1411L209.763 55.987V59.9667L203.674 61.0014C202.64 61.1871 201.87 61.5188 201.366 61.9963C200.862 62.4739 200.61 63.0974 200.61 63.8668C200.61 64.6096 200.889 65.2066 201.446 65.6576C202.029 66.0821 202.746 66.2944 203.595 66.2944C204.683 66.2944 205.638 66.0688 206.46 65.6178C207.309 65.1403 207.959 64.4902 208.41 63.6678C208.888 62.8453 209.127 61.9433 209.127 60.9616V55.3901C209.127 54.4615 208.755 53.6921 208.012 53.0818C207.296 52.4451 206.341 52.1267 205.147 52.1267C204.033 52.1267 203.038 52.4318 202.162 53.042C201.313 53.6257 200.69 54.4084 200.292 55.3901L196.033 53.3206C196.458 52.1798 197.121 51.1981 198.023 50.3757C198.952 49.5267 200.04 48.8634 201.287 48.3858C202.534 47.9083 203.887 47.6695 205.346 47.6695C207.123 47.6695 208.689 48.0011 210.042 48.6644C211.395 49.3011 212.443 50.2032 213.186 51.3706C213.955 52.5114 214.34 53.8512 214.34 55.3901V69.7965H209.405V66.0954L210.519 66.0158C209.962 66.9444 209.299 67.727 208.53 68.3638C207.76 68.974 206.885 69.4516 205.903 69.7965C204.921 70.1149 203.834 70.274 202.64 70.274ZM228.639 70.0353C226.199 70.0353 224.302 69.372 222.948 68.0454C221.622 66.6923 220.959 64.7954 220.959 62.3545V52.8033H217.218V48.147H217.616C218.677 48.147 219.499 47.8685 220.083 47.3113C220.667 46.7542 220.959 45.945 220.959 44.8837V43.2122H226.172V48.147H231.147V52.8033H226.172V62.0759C226.172 62.7922 226.291 63.4025 226.53 63.9066C226.795 64.4107 227.193 64.7954 227.724 65.0607C228.281 65.326 228.984 65.4586 229.833 65.4586C230.019 65.4586 230.231 65.4454 230.47 65.4188C230.735 65.3923 230.987 65.3658 231.226 65.3392V69.7965C230.855 69.8495 230.43 69.9026 229.953 69.9557C229.475 70.0087 229.037 70.0353 228.639 70.0353ZM235.846 77.7558V48.4654H238.831V53.241L238.353 52.4053C239.202 51.0522 240.33 49.9777 241.736 49.1818C243.169 48.3858 244.8 47.9879 246.631 47.9879C248.647 47.9879 250.438 48.4787 252.004 49.4603C253.595 50.4155 254.842 51.7288 255.744 53.4002C256.673 55.0717 257.137 56.9819 257.137 59.1309C257.137 61.2534 256.673 63.1637 255.744 64.8617C254.842 66.5331 253.595 67.8597 252.004 68.8414C250.438 69.7965 248.647 70.274 246.631 70.274C244.8 70.274 243.142 69.8628 241.656 69.0403C240.197 68.1913 239.096 66.9974 238.353 65.4586L238.831 65.0209V77.7558H235.846ZM246.472 67.2893C247.904 67.2893 249.178 66.9311 250.292 66.2148C251.433 65.4984 252.322 64.53 252.959 63.3096C253.622 62.0626 253.954 60.6698 253.954 59.1309C253.954 57.5656 253.622 56.1727 252.959 54.9523C252.322 53.7319 251.433 52.7635 250.292 52.0471C249.178 51.3308 247.904 50.9726 246.472 50.9726C245.039 50.9726 243.739 51.3308 242.572 52.0471C241.431 52.7635 240.516 53.7451 239.826 54.9921C239.162 56.2125 238.831 57.5921 238.831 59.1309C238.831 60.6698 239.162 62.0626 239.826 63.3096C240.516 64.53 241.431 65.4984 242.572 66.2148C243.739 66.9311 245.039 67.2893 246.472 67.2893ZM268.559 70.274C267.206 70.274 265.998 70.022 264.937 69.5179C263.876 68.9873 263.04 68.2709 262.43 67.3689C261.82 66.4668 261.515 65.4321 261.515 64.2647C261.515 63.1504 261.753 62.1422 262.231 61.2402C262.709 60.3116 263.451 59.5289 264.46 58.8922C265.468 58.2554 266.755 57.8044 268.32 57.5391L276.677 56.1462V58.8524L269.036 60.1259C267.497 60.3912 266.383 60.882 265.693 61.5983C265.03 62.3147 264.698 63.1637 264.698 64.1453C264.698 65.1005 265.07 65.9097 265.813 66.5729C266.582 67.2362 267.564 67.5679 268.758 67.5679C270.217 67.5679 271.49 67.2628 272.578 66.6525C273.666 66.0158 274.515 65.1668 275.125 64.1055C275.735 63.0443 276.04 61.8637 276.04 60.5636V55.1513C276.04 53.8778 275.576 52.8431 274.648 52.0471C273.719 51.2512 272.512 50.8532 271.026 50.8532C269.726 50.8532 268.585 51.1849 267.604 51.8481C266.622 52.4849 265.892 53.3206 265.415 54.3553L262.709 52.8829C263.106 51.9808 263.73 51.1583 264.579 50.4155C265.455 49.6726 266.449 49.0889 267.564 48.6644C268.678 48.2134 269.832 47.9879 271.026 47.9879C272.591 47.9879 273.971 48.293 275.165 48.9032C276.385 49.5134 277.327 50.3624 277.99 51.4502C278.68 52.5114 279.025 53.7451 279.025 55.1513V69.7965H276.04V65.5382L276.478 65.976C276.107 66.7719 275.523 67.5015 274.727 68.1648C273.958 68.8016 273.042 69.3189 271.981 69.7169C270.946 70.0883 269.806 70.274 268.559 70.274ZM295.273 78.5518C293.814 78.5518 292.461 78.3262 291.214 77.8752C289.993 77.4242 288.932 76.8007 288.03 76.0048C287.154 75.2354 286.478 74.3333 286 73.2986L288.746 71.8261C289.171 72.8343 289.927 73.7098 291.015 74.4527C292.102 75.1956 293.495 75.567 295.193 75.567C296.493 75.567 297.687 75.315 298.775 74.8109C299.863 74.3068 300.738 73.5639 301.402 72.5823C302.065 71.6006 302.396 70.3934 302.396 68.9607V64.2249L302.874 64.6627C302.131 66.2015 301.03 67.3954 299.571 68.2444C298.112 69.0669 296.52 69.4781 294.795 69.4781C292.805 69.4781 291.015 69.0005 289.423 68.0454C287.831 67.0903 286.571 65.8035 285.642 64.1851C284.74 62.5402 284.289 60.7228 284.289 58.733C284.289 56.7166 284.74 54.8992 285.642 53.2808C286.571 51.6624 287.818 50.3757 289.383 49.4205C290.975 48.4654 292.779 47.9879 294.795 47.9879C296.52 47.9879 298.085 48.3858 299.491 49.1818C300.924 49.9777 302.052 51.0522 302.874 52.4053L302.396 53.241V48.4654H305.381V68.9607C305.381 70.7914 304.943 72.4231 304.068 73.8557C303.219 75.315 302.025 76.4558 300.486 77.2783C298.974 78.1273 297.236 78.5518 295.273 78.5518ZM294.954 66.4933C296.334 66.4933 297.581 66.1484 298.695 65.4586C299.81 64.7423 300.698 63.8004 301.362 62.6331C302.052 61.4392 302.396 60.1391 302.396 58.733C302.396 57.3268 302.052 56.0401 301.362 54.8727C300.698 53.6788 299.81 52.7369 298.695 52.0471C297.581 51.3308 296.334 50.9726 294.954 50.9726C293.548 50.9726 292.275 51.3308 291.134 52.0471C289.993 52.7369 289.091 53.6655 288.428 54.8329C287.791 56.0003 287.473 57.3003 287.473 58.733C287.473 60.1391 287.791 61.4392 288.428 62.6331C289.091 63.8004 289.98 64.7423 291.094 65.4586C292.235 66.1484 293.522 66.4933 294.954 66.4933ZM321.225 70.274C319.235 70.274 317.431 69.7965 315.812 68.8414C314.22 67.8597 312.96 66.5199 312.032 64.8219C311.103 63.1239 310.639 61.2004 310.639 59.0514C310.639 56.9023 311.09 55.0054 311.992 53.3604C312.894 51.689 314.114 50.3757 315.653 49.4205C317.218 48.4654 318.97 47.9879 320.906 47.9879C322.445 47.9879 323.811 48.2797 325.005 48.8634C326.226 49.4205 327.261 50.1899 328.11 51.1716C328.959 52.1267 329.609 53.2145 330.06 54.4349C330.511 55.6288 330.736 56.8625 330.736 58.136C330.736 58.4013 330.723 58.7064 330.696 59.0514C330.67 59.3697 330.63 59.7014 330.577 60.0463H312.549V57.2605H328.866L327.433 58.4544C327.672 56.9952 327.499 55.6952 326.916 54.5543C326.358 53.3869 325.549 52.4716 324.488 51.8083C323.427 51.1185 322.233 50.7736 320.906 50.7736C319.58 50.7736 318.346 51.1185 317.205 51.8083C316.091 52.4982 315.215 53.4665 314.579 54.7135C313.942 55.9339 313.69 57.3932 313.822 59.0912C313.69 60.7891 313.955 62.2749 314.618 63.5484C315.308 64.7954 316.237 65.7637 317.404 66.4536C318.598 67.1434 319.872 67.4883 321.225 67.4883C322.79 67.4883 324.103 67.1168 325.165 66.374C326.226 65.6311 327.088 64.7025 327.751 63.5882L330.298 64.9413C329.874 65.8964 329.224 66.7852 328.348 67.6077C327.473 68.4036 326.425 69.0536 325.204 69.5577C324.01 70.0353 322.684 70.274 321.225 70.274ZM343.401 70.274C341.358 70.274 339.567 69.7567 338.028 68.722C336.489 67.6873 335.375 66.2811 334.685 64.5035L337.193 63.3096C337.803 64.6096 338.652 65.6444 339.739 66.4138C340.854 67.1832 342.074 67.5679 343.401 67.5679C344.674 67.5679 345.749 67.2628 346.624 66.6525C347.5 66.0158 347.938 65.1933 347.938 64.1851C347.938 63.4423 347.725 62.8586 347.301 62.4341C346.876 61.983 346.386 61.6381 345.828 61.3994C345.271 61.1606 344.78 60.9881 344.356 60.882L341.292 60.0065C339.328 59.4493 337.909 58.6667 337.033 57.6585C336.158 56.6503 335.72 55.4829 335.72 54.1564C335.72 52.9094 336.038 51.8216 336.675 50.893C337.312 49.9644 338.174 49.2481 339.262 48.744C340.35 48.2399 341.557 47.9879 342.883 47.9879C344.688 47.9879 346.319 48.4654 347.778 49.4205C349.264 50.3491 350.312 51.6492 350.922 53.3206L348.375 54.5145C347.845 53.3206 347.075 52.392 346.067 51.7288C345.086 51.0389 343.984 50.694 342.764 50.694C341.57 50.694 340.615 50.9991 339.899 51.6094C339.182 52.2196 338.824 52.989 338.824 53.9176C338.824 54.6339 339.01 55.2043 339.381 55.6288C339.753 56.0533 340.177 56.3717 340.655 56.584C341.159 56.7962 341.597 56.9554 341.968 57.0615L345.51 58.0962C347.235 58.6003 348.574 59.383 349.529 60.4442C350.511 61.5055 351.002 62.7525 351.002 64.1851C351.002 65.3525 350.67 66.4005 350.007 67.3291C349.37 68.2577 348.482 68.9873 347.341 69.5179C346.2 70.022 344.887 70.274 343.401 70.274Z"
						fill="#324D67"
					/>
				</svg>
			</div>

			{tab === Tabs.initial &&
				(isLoading ? (
					<FullScreenLoading />
				) : (
					<>
						{/* <h1 style={{ fontWeight: "bold", textTransform: "uppercase" }}>Great Pages</h1> */}
						<p
							style={{
								margin: "0",
								fontWeight: "bold",
							}}
						>
							{warningMessage.length ? warningMessage : "Selecione um frame para conversÃ£o em pÃ¡gina"}
						</p>
						<button
							style={{
								padding: "0.8rem 1.5rem",
								backgroundColor: isFrameSelected ? Colors.primaryColor : "gray",
								color: "white",
								border: "none",
								borderRadius: "6px",
								cursor: isFrameSelected ? "pointer" : "not-allowed",
								fontSize: "1.2rem",
								textTransform: "uppercase",
								fontWeight: "bold",
								// visibility: isFrameSelected ? "visible" : "hidden",
							}}
							onClick={initCloning}
							disabled={!isFrameSelected}
						>
							Converter
						</button>
					</>
				))}

			{tab === Tabs.download && (
				<>
					<p
						style={{
							margin: "0",
							fontWeight: "bold",
						}}
					>
						Seu frame estÃ¡ pronto para download
					</p>
					<div
						style={{
							width: "100%",
							display: "flex",
							gap: "0.5rem",
							flexDirection: "column",
							alignItems: "center",
						}}
					>
						<button
							style={{
								padding: "0.8rem 1.5rem",
								backgroundColor: Colors.primaryColor,
								color: "white",
								border: "none",
								borderRadius: "6px",
								cursor: "pointer",
								fontSize: "1.2rem",
								textTransform: "uppercase",
								fontWeight: "bold",
								width: "100%",
							}}
							onClick={downloadJson}
						>
							Download
						</button>
						<a
							href="#"
							style={{
								textDecoration: "underline",
								color: Colors.primaryColor,
							}}
							onClick={() => setTab(Tabs.initial)}
						>
							Voltar ao inÃ­cio
						</a>
					</div>
				</>
			)}
		</div>
	);
}

export default App;
